{"version":3,"file":"topojson.js","sources":["../node_modules/topojson/node_modules/topojson-client/src/identity.js","../node_modules/topojson/node_modules/topojson-client/src/transform.js","../node_modules/topojson/node_modules/topojson-client/src/bbox.js","../node_modules/topojson/node_modules/topojson-client/src/reverse.js","../node_modules/topojson/node_modules/topojson-client/src/feature.js","../node_modules/topojson/node_modules/topojson-client/src/stitch.js","../node_modules/topojson/node_modules/topojson-client/src/mesh.js","../node_modules/topojson/node_modules/topojson-client/src/merge.js","../node_modules/topojson/node_modules/topojson-client/src/bisect.js","../node_modules/topojson/node_modules/topojson-client/src/neighbors.js","../node_modules/topojson/node_modules/topojson-client/src/untransform.js","../node_modules/topojson/node_modules/topojson-client/src/quantize.js","../node_modules/topojson-server/src/bounds.js","../node_modules/topojson-server/src/hash/hashset.js","../node_modules/topojson-server/src/hash/hashmap.js","../node_modules/topojson-server/src/hash/point-equal.js","../node_modules/topojson-server/src/hash/point-hash.js","../node_modules/topojson-server/src/join.js","../node_modules/topojson-server/src/cut.js","../node_modules/topojson-server/src/dedup.js","../node_modules/topojson-server/src/delta.js","../node_modules/topojson-server/src/extract.js","../node_modules/topojson-server/src/geometry.js","../node_modules/topojson-server/src/prequantize.js","../node_modules/topojson-server/src/topology.js","../node_modules/topojson-simplify/src/prune.js","../node_modules/topojson-simplify/src/filter.js","../node_modules/topojson-simplify/src/filterAttached.js","../node_modules/topojson-client/src/identity.js","../node_modules/topojson-client/src/transform.js","../node_modules/topojson-client/src/reverse.js","../node_modules/topojson-client/src/feature.js","../node_modules/topojson-simplify/src/planar.js","../node_modules/topojson-simplify/src/filterWeight.js","../node_modules/topojson-simplify/src/filterAttachedWeight.js","../node_modules/topojson-simplify/src/heap.js","../node_modules/topojson-simplify/src/presimplify.js","../node_modules/topojson-simplify/src/quantile.js","../node_modules/topojson-simplify/src/simplify.js","../node_modules/topojson-simplify/src/spherical.js"],"sourcesContent":["export default function(x) {\n  return x;\n}\n","import identity from \"./identity\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","import transform from \"./transform\";\n\nexport default function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","import reverse from \"./reverse\";\nimport transform from \"./transform\";\n\nexport default function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nexport function feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","export default function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n","import {object} from \"./feature\";\nimport stitch from \"./stitch\";\n\nexport default function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n","import {object} from \"./feature\";\nimport stitch from \"./stitch\";\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n","export default function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n","import bisect from \"./bisect\";\n\nexport default function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n","import identity from \"./identity\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","import bbox from \"./bbox\";\nimport untransform from \"./untransform\";\n\nexport default function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be ≥2\");\n    box = topology.bbox || bbox(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n}\n","// Computes the bounding box of the specified hash of GeoJSON objects.\nexport default function(objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  function boundGeometry(geometry) {\n    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n\n  var boundGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n    Point: function(o) { boundPoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n    LineString: function(o) { boundLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n    Polygon: function(o) { o.arcs.forEach(boundLine); },\n    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n  };\n\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n}\n","export default function(size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = (index + 1) & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = (index + 1) & mask];\n    }\n    return false;\n  }\n\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n}\n","export default function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n}\n","export default function(pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n}\n","// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16),\n    floats = new Float64Array(buffer),\n    uints = new Uint32Array(buffer);\n\nexport default function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n}\n","import hashset from \"./hash/hashset\";\nimport hashmap from \"./hash/hashmap\";\nimport equalPoint from \"./hash/point-equal\";\nimport hashPoint from \"./hash/point-hash\";\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\nexport default function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0, // upper bound on number of junctions\n      i, n,\n      previousIndex,\n      currentIndex,\n      nextIndex;\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n\n    return indexes;\n  }\n\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n\n  visitedByIndex = leftByIndex = rightByIndex = null;\n\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n\n  return junctionByPoint;\n}\n","import join from \"./join\";\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\nexport default function(topology) {\n  var junctions = join(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      next,\n      i, n;\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = {0: lineMid, 1: line[1]};\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = {0: ringMid, 1: ring[1]};\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else { // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n\n  return topology;\n}\n\nfunction rotateArray(array, start, end, offset) {\n  reverse(array, start, end);\n  reverse(array, start, start + offset);\n  reverse(array, start + offset, end);\n}\n\nfunction reverse(array, start, end) {\n  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n","import hashmap from \"./hash/hashmap\";\nimport equalPoint from \"./hash/point-equal\";\nimport hashPoint from \"./hash/point-hash\";\n\n// Given a cut topology, combines duplicate arcs.\nexport default function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines, line,\n      rings = topology.rings, ring,\n      arcCount = lines.length + rings.length,\n      i, n;\n\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i]; while (line = line.next) ++arcCount;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i]; while (ring = ring.next) ++arcCount;\n  }\n\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n      arcs = topology.arcs = [];\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) { // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n\n  function dedupLine(arc) {\n    var startPoint,\n        endPoint,\n        startArcs, startArc,\n        endArcs, endArc,\n        i, n;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n\n    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function dedupRing(arc) {\n    var endPoint,\n        endArcs,\n        endArc,\n        i, n;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n\n  return topology;\n}\n","// Given an array of arcs in absolute (but already quantized!) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given arcs!\nexport default function(arcs) {\n  var i = -1,\n      n = arcs.length;\n\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        k = 1,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n\n    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\n    arc.length = k;\n  }\n\n  return arcs;\n}\n","// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\nexport default function(objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n\n  function extractGeometry(geometry) {\n    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n\n  var extractGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n  };\n\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {0: index - n + 1, 1: index};\n    lines.push(arc);\n    return arc;\n  }\n\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {0: index - n + 1, 1: index};\n    rings.push(arc);\n    return arc;\n  }\n\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n}\n","// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nexport default function(inputs) {\n  var outputs = {}, key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n}\n\nfunction geomifyObject(input) {\n  return input == null ? {type: null}\n      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n      : input.type === \"Feature\" ? geomifyFeature\n      : geomifyGeometry)(input);\n}\n\nfunction geomifyFeatureCollection(input) {\n  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) { output.properties = input.properties; break; }\n  return output;\n}\n\nfunction geomifyGeometry(input) {\n  if (input == null) return {type: null};\n  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n","export default function(objects, bbox, n) {\n  var x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3],\n      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n\n  function quantizePoints(input, m) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        pi,\n        px,\n        py,\n        x,\n        y;\n\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n    }\n\n    output.length = j;\n    while (j < m) j = output.push([output[0][0], output[0][1]]);\n    return output;\n  }\n\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n\n  function quantizeGeometry(o) {\n    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n  };\n\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n}\n","import bounds from \"./bounds\";\nimport cut from \"./cut\";\nimport dedup from \"./dedup\";\nimport delta from \"./delta\";\nimport extract from \"./extract\";\nimport geometry from \"./geometry\";\nimport hashmap from \"./hash/hashmap\";\nimport prequantize from \"./prequantize\";\n\n// Constructs the TopoJSON Topology for the specified hash of features.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\nexport default function(objects, quantization) {\n  var bbox = bounds(objects = geometry(objects)),\n      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n      topology = dedup(cut(extract(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\n  objects = topology.objects; // for garbage collection\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function(arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n\n  delete topology.coordinates;\n  coordinates = null;\n\n  function indexGeometry(geometry) {\n    if (geometry && indexGeometryType.hasOwnProperty(geometry.type)) indexGeometryType[geometry.type](geometry);\n  }\n\n  var indexGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n  };\n\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = delta(topology.arcs);\n  }\n\n  return topology;\n}\n\nfunction hashArc(arc) {\n  var i = arc[0], j = arc[1], t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\n\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0], ja = arcA[1],\n      ib = arcB[0], jb = arcB[1], t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n","export default function(topology) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      oldArcs = topology.arcs,\n      oldArcsLength = oldArcs.length,\n      oldIndex = -1,\n      newIndexByOldIndex = new Array(oldArcsLength),\n      newArcsLength = 0,\n      newArcs,\n      newIndex = -1,\n      key;\n\n  function scanGeometry(input) {\n    switch (input.type) {\n      case \"GeometryCollection\": input.geometries.forEach(scanGeometry); break;\n      case \"LineString\": scanArcs(input.arcs); break;\n      case \"MultiLineString\": input.arcs.forEach(scanArcs); break;\n      case \"Polygon\": input.arcs.forEach(scanArcs); break;\n      case \"MultiPolygon\": input.arcs.forEach(scanMultiArcs); break;\n    }\n  }\n\n  function scanArc(index) {\n    if (index < 0) index = ~index;\n    if (!newIndexByOldIndex[index]) newIndexByOldIndex[index] = 1, ++newArcsLength;\n  }\n\n  function scanArcs(arcs) {\n    arcs.forEach(scanArc);\n  }\n\n  function scanMultiArcs(arcs) {\n    arcs.forEach(scanArcs);\n  }\n\n  function reindexGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(reindexGeometry)}; break;\n      case \"LineString\": output = {type: \"LineString\", arcs: reindexArcs(input.arcs)}; break;\n      case \"MultiLineString\": output = {type: \"MultiLineString\", arcs: input.arcs.map(reindexArcs)}; break;\n      case \"Polygon\": output = {type: \"Polygon\", arcs: input.arcs.map(reindexArcs)}; break;\n      case \"MultiPolygon\": output = {type: \"MultiPolygon\", arcs: input.arcs.map(reindexMultiArcs)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function reindexArc(oldIndex) {\n    return oldIndex < 0 ? ~newIndexByOldIndex[~oldIndex] : newIndexByOldIndex[oldIndex];\n  }\n\n  function reindexArcs(arcs) {\n    return arcs.map(reindexArc);\n  }\n\n  function reindexMultiArcs(arcs) {\n    return arcs.map(reindexArcs);\n  }\n\n  for (key in oldObjects) {\n    scanGeometry(oldObjects[key]);\n  }\n\n  newArcs = new Array(newArcsLength);\n\n  while (++oldIndex < oldArcsLength) {\n    if (newIndexByOldIndex[oldIndex]) {\n      newIndexByOldIndex[oldIndex] = ++newIndex;\n      newArcs[newIndex] = oldArcs[oldIndex];\n    }\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = reindexGeometry(oldObjects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: newArcs\n  };\n}\n","import prune from \"./prune\";\n\nexport default function(topology, filter) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      key;\n\n  if (filter == null) filter = filterTrue;\n\n  function filterGeometry(input) {\n    var output, arcs;\n    switch (input.type) {\n      case \"Polygon\": {\n        arcs = filterRings(input.arcs);\n        output = arcs ? {type: \"Polygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"MultiPolygon\": {\n        arcs = input.arcs.map(filterRings).filter(filterIdentity);\n        output = arcs.length ? {type: \"MultiPolygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"GeometryCollection\": {\n        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);\n        output = arcs.length ? {type: \"GeometryCollection\", geometries: arcs} : {type: null};\n        break;\n      }\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function filterRings(arcs) {\n    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))\n        : null;\n  }\n\n  function filterExteriorRing(ring) {\n    return filter(ring, false);\n  }\n\n  function filterInteriorRing(ring) {\n    return filter(ring, true);\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = filterGeometry(oldObjects[key]);\n  }\n\n  return prune({\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: topology.arcs\n  });\n}\n\nfunction filterTrue() {\n  return true;\n}\n\nfunction filterIdentity(x) {\n  return x;\n}\n\nfunction filterNotNull(geometry) {\n  return geometry.type != null;\n}\n","export default function(topology) {\n  var ownerByArc = new Array(topology.arcs.length), // arc index -> index of unique associated ring, or -1 if used by multiple rings\n      ownerIndex = 0,\n      key;\n\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n      case \"Polygon\": testArcs(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n    }\n  }\n\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ownerIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var owner = ownerByArc[arc];\n        if (owner == null) ownerByArc[arc] = ownerIndex;\n        else if (owner !== ownerIndex) ownerByArc[arc] = -1;\n      }\n    }\n  }\n\n  for (key in topology.objects) {\n    testGeometry(topology.objects[key]);\n  }\n\n  return function(ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (ownerByArc[(arc = ring[j]) < 0 ? ~arc : arc] === -1) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","import reverse from \"./reverse\";\nimport transform from \"./transform\";\n\nexport default function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nexport function feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","export function planarTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n}\n\nexport function planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area) / 2;\n}\n","import {feature} from \"topojson-client\";\nimport {planarRingArea} from \"./planar\";\n\nexport default function(topology, minWeight, weight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  if (weight == null) weight = planarRingArea;\n\n  return function(ring, interior) {\n    return weight(feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;\n  };\n}\n","import filterAttached from \"./filterAttached\";\nimport filterWeight from \"./filterWeight\";\n\nexport default function(topology, minWeight, weight) {\n  var a = filterAttached(topology),\n      w = filterWeight(topology, minWeight, weight);\n  return function(ring, interior) {\n    return a(ring, interior) || w(ring, interior);\n  };\n}\n","function compare(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nexport default function() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compare(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compare(array[l], child) < 0) child = array[j = l];\n      if (r < size && compare(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n","import {transform} from \"topojson-client\";\nimport newHeap from \"./heap\";\nimport {planarTriangleArea} from \"./planar\";\n\nfunction copy(point) {\n  return [point[0], point[1], 0];\n}\n\nexport default function(topology, weight) {\n  var point = topology.transform ? transform(topology.transform) : copy,\n      heap = newHeap();\n\n  if (weight == null) weight = planarTriangleArea;\n\n  var arcs = topology.arcs.map(function(arc) {\n    var triangles = [],\n        maxWeight = 0,\n        triangle,\n        i,\n        n;\n\n    arc = arc.map(point);\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = [arc[i - 1], arc[i], arc[i + 1]];\n      triangle[1][2] = weight(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    // Always keep the arc endpoints!\n    arc[0][2] = arc[n][2] = Infinity;\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the weight of the current point is less than that of the previous\n      // point to be eliminated, use the latter’s weight instead. This ensures\n      // that the current point cannot be eliminated without eliminating\n      // previously- eliminated points.\n      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;\n      else maxWeight = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    return arc;\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = weight(triangle);\n    heap.push(triangle);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n}\n","export default function(topology, p) {\n  var array = [];\n\n  topology.arcs.forEach(function(arc) {\n    arc.forEach(function(point) {\n      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n        array.push(point[2]);\n      }\n    });\n  });\n\n  return array.length && quantile(array.sort(descending), p);\n}\n\nfunction quantile(array, p) {\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return array[0];\n  if (p >= 1) return array[n - 1];\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = array[i],\n      b = array[i + 1];\n  return a + (b - a) * (h - i);\n}\n\nfunction descending(a, b) {\n  return b - a;\n}\n","export default function(topology, minWeight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  // Remove points whose weight is less than the minimum weight.\n  var arcs = topology.arcs.map(function(input) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        point;\n\n    while (++i < n) {\n      if ((point = input[i])[2] >= minWeight) {\n        output[j++] = [point[0], point[1]];\n      }\n    }\n\n    output.length = j;\n    return output;\n  });\n\n  return {\n    type: \"Topology\",\n    transform: topology.transform,\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    quarterPi = pi / 4,\n    radians = pi / 180,\n    abs = Math.abs,\n    atan2 = Math.atan2,\n    cos = Math.cos,\n    sin = Math.sin;\n\nfunction halfArea(ring, closed) {\n  var i = 0,\n      n = ring.length,\n      sum = 0,\n      point = ring[closed ? i++ : n - 1],\n      lambda0, lambda1 = point[0] * radians,\n      phi1 = (point[1] * radians) / 2 + quarterPi,\n      cosPhi0, cosPhi1 = cos(phi1),\n      sinPhi0, sinPhi1 = sin(phi1);\n\n  for (; i < n; ++i) {\n    point = ring[i];\n    lambda0 = lambda1, lambda1 = point[0] * radians;\n    phi1 = (point[1] * radians) / 2 + quarterPi;\n    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n    var dLambda = lambda1 - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        k = sinPhi0 * sinPhi1,\n        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n        v = k * sdLambda * sin(adLambda);\n    sum += atan2(v, u);\n  }\n\n  return sum;\n}\n\nexport function sphericalRingArea(ring, interior) {\n  var sum = halfArea(ring, true);\n  if (interior) sum *= -1;\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nexport function sphericalTriangleArea(t) {\n  return abs(halfArea(t, false)) * 2;\n}\n"],"names":["feature","reverse","identity","object","transform","planarRingArea","quantile"],"mappings":"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"}