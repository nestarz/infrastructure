{"version":3,"file":"versor.js","sources":["../node_modules/versor/src/versor.js"],"sourcesContent":["var acos = Math.acos,\n    asin = Math.asin,\n    atan2 = Math.atan2,\n    cos = Math.cos,\n    max = Math.max,\n    min = Math.min,\n    PI = Math.PI,\n    sin = Math.sin,\n    sqrt = Math.sqrt,\n    radians = PI / 180,\n    degrees = 180 / PI;\n\n// Returns the unit quaternion for the given Euler rotation angles [λ, φ, γ].\nvar versor = function(e) {\n  var l = e[0] / 2 * radians, sl = sin(l), cl = cos(l), // λ / 2\n      p = e[1] / 2 * radians, sp = sin(p), cp = cos(p), // φ / 2\n      g = e[2] / 2 * radians, sg = sin(g), cg = cos(g); // γ / 2\n  return [\n    cl * cp * cg + sl * sp * sg,\n    sl * cp * cg - cl * sp * sg,\n    cl * sp * cg + sl * cp * sg,\n    cl * cp * sg - sl * sp * cg\n  ];\n}\n\n// Returns Cartesian coordinates [x, y, z] given spherical coordinates [λ, φ].\nversor.cartesian = function(e) {\n  var l = e[0] * radians, p = e[1] * radians, cp = cos(p);\n  return [cp * cos(l), cp * sin(l), sin(p)];\n};\n\n// Returns the Euler rotation angles [λ, φ, γ] for the given quaternion.\nversor.rotation = function(q) {\n  return [\n    atan2(2 * (q[0] * q[1] + q[2] * q[3]), 1 - 2 * (q[1] * q[1] + q[2] * q[2])) * degrees,\n    asin(max(-1, min(1, 2 * (q[0] * q[2] - q[3] * q[1])))) * degrees,\n    atan2(2 * (q[0] * q[3] + q[1] * q[2]), 1 - 2 * (q[2] * q[2] + q[3] * q[3])) * degrees\n  ];\n};\n\n// Returns the quaternion to rotate between two cartesian points on the sphere.\n// alpha for tweening [0,1]\nversor.delta = function(v0, v1, alpha) {\n  if (arguments.length == 2) alpha = 1;\n  var w = cross(v0, v1), l = sqrt(dot(w, w));\n  if (!l) return [1, 0, 0, 0];\n  var t = alpha * acos(max(-1, min(1, dot(v0, v1)))) / 2, s = sin(t); // t = θ / 2\n  return [cos(t), w[2] / l * s, -w[1] / l * s, w[0] / l * s];\n};\n\n// Returns the quaternion that represents q0 * q1.\nversor.multiply = function(q0, q1) {\n  return [\n    q0[0] * q1[0] - q0[1] * q1[1] - q0[2] * q1[2] - q0[3] * q1[3],\n    q0[0] * q1[1] + q0[1] * q1[0] + q0[2] * q1[3] - q0[3] * q1[2],\n    q0[0] * q1[2] - q0[1] * q1[3] + q0[2] * q1[0] + q0[3] * q1[1],\n    q0[0] * q1[3] + q0[1] * q1[2] - q0[2] * q1[1] + q0[3] * q1[0]\n  ];\n};\n\nfunction cross(v0, v1) {\n  return [\n    v0[1] * v1[2] - v0[2] * v1[1],\n    v0[2] * v1[0] - v0[0] * v1[2],\n    v0[0] * v1[1] - v0[1] * v1[0]\n  ];\n}\n\nfunction dot(v0, v1) {\n  return v0[0] * v1[0] + v0[1] * v1[1] + v0[2] * v1[2];\n}\n\nexport default versor;"],"names":[],"mappings":"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"}